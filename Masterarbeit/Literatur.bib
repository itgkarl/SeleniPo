
@book{seidl_basiswissen_2012,
	address = {Heidelberg},
	edition = {1. Aufl.},
	title = {Basiswissen {Testautomatisierung} / {Richard} {Seidl} ; {Manfred} {Baumgartner} ; {Thomas} {Bucsics}},
	isbn = {978-3-89864-724-3},
	publisher = {dpunkt-Verl.},
	author = {Seidl, Richard},
	year = {2012},
	file = {DNB, Katalog der Deutschen Nationalbibliothek:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\BMBBCPSF\\opac.htm\;jsessionid=F4D0B30606E625D626658326B84285D7.html:text/html}
}

@book{thaller_software-test_2002,
	address = {Hannover},
	edition = {2., aktualisierte und erw. Aufl.},
	title = {Software-{Test}},
	isbn = {3-88229-198-2},
	publisher = {Heise},
	author = {Thaller, Georg Erwin},
	year = {2002},
	file = {OPAC der Hochschule München:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\SDRTXECV\\singleHit.html:text/html}
}

@book{spillner_basiswissen_2007,
	address = {Heidelberg},
	edition = {3. Aufl.},
	title = {Basiswissen {Softwaretest}},
	isbn = {3-89864-358-1},
	publisher = {dpunkt-Verl.},
	author = {Spillner, Andreas and Linz, Tilo},
	year = {2007},
	file = {OPAC der Hochschule München:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\BRKJ2KR2\\singleHit.html:text/html}
}

@inproceedings{amannejad_search-based_2014,
	title = {A {Search}-{Based} {Approach} for {Cost}-{Effective} {Software} {Test} {Automation} {Decision} {Support} and an {Industrial} {Case} {Study}},
	doi = {10.1109/ICSTW.2014.34},
	abstract = {Test automation is a widely-used approach to reduce the cost of manual software testing. However, if it is not planned or conducted properly, automated testing would not necessarily be more cost effective than manual testing. Deciding what parts of a given System Under Test (SUT) should be tested in an automated fashion and what parts should remain manual is a frequently-asked and challenging question for practitioner testers. In this study, we propose a search-based approach for deciding what parts of a given SUT should be tested automatically to gain the highest Return On Investment (ROI). This work is the first systematic approach for this problem, and significance of our approach is that it considers automation in the entire testing process (i.e., from test-case design, to test scripting, to test execution, and test-result evaluation). The proposed approach has been applied in an industrial setting in the context of a software product used in the oil and gas industry in Canada. Among the results of the case study is that, when planned and conducted properly using our decision-support approach, test automation provides the highest ROI. In this study, we show that if automation decision is taken effectively, test-case design, test execution, and test evaluation can result in about 307\%, 675\%, and 41\% ROI in 10 rounds of using automated test suites.},
	booktitle = {2014 {IEEE} {Seventh} {International} {Conference} on {Software} {Testing}, {Verification} and {Validation} {Workshops} ({ICSTW})},
	author = {Amannejad, Y. and Garousi, V. and Irving, R. and Sahaf, Z.},
	month = mar,
	year = {2014},
	keywords = {action research, Automation, Context, cost-benefit analysis, cost-effective software test automation decision support approach, cost reduction, gas industry, industrial case study, investment, Manuals, oil industry, Optimization, program testing, return on investment, ROI, search-based approach, search-based software engineering, Software, software product, software product lines, software test automation, Software testing, SUT, system under test, test-case design, test evaluation, test execution},
	pages = {302--311},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\K8P44BJ8\\abs_all.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\4DC3EHVU\\Amannejad et al. - 2014 - A Search-Based Approach for Cost-Effective Softwar.pdf:application/pdf}
}

@inproceedings{ramler_economic_2006,
	address = {New York, NY, USA},
	series = {{AST} '06},
	title = {Economic {Perspectives} in {Test} {Automation}: {Balancing} {Automated} and {Manual} {Testing} with {Opportunity} {Cost}},
	isbn = {1-59593-408-1},
	shorttitle = {Economic {Perspectives} in {Test} {Automation}},
	url = {http://doi.acm.org/10.1145/1138929.1138946},
	doi = {10.1145/1138929.1138946},
	urldate = {2014-10-28},
	booktitle = {Proceedings of the 2006 {International} {Workshop} on {Automation} of {Software} {Test}},
	publisher = {ACM},
	author = {Ramler, Rudolf and Wolfmaier, Klaus},
	year = {2006},
	keywords = {Automated Testing, benefits and costs of automation, manual testing, testing economics},
	pages = {85--91},
	file = {Economic Perspectives in Test Automation\: Balancing Automated and Manual Testing with Opportunity Cost - p85.pdf:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\CW39KC65\\p85.pdf:application/pdf}
}

@inproceedings{harrold_testing:_2000,
	address = {New York, NY, USA},
	series = {{ICSE} '00},
	title = {Testing: {A} {Roadmap}},
	isbn = {1-58113-253-0},
	shorttitle = {Testing},
	url = {http://doi.acm.org/10.1145/336512.336532},
	doi = {10.1145/336512.336532},
	urldate = {2014-10-28},
	booktitle = {Proceedings of the {Conference} on {The} {Future} of {Software} {Engineering}},
	publisher = {ACM},
	author = {Harrold, Mary Jean},
	year = {2000},
	pages = {61--72},
	file = {ACM Full Text PDF:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\EQMVHSZS\\Harrold - 2000 - Testing A Roadmap.pdf:application/pdf}
}

@misc{ieee_ieee_2008,
	title = {{IEEE} {Std} 829-2008 {IEEE} {Standard} for {Software} and {System} {Test} {Documentation}},
	shorttitle = {{IEEE} {Std} 829-2008},
	author = {{IEEE}},
	month = jul,
	year = {2008}
}

@book{fewster_software_1999,
	title = {Software {Test} {Automation} {Effective} use of test execution tools},
	isbn = {0-201-33140-3},
	publisher = {Addison-Wesley},
	author = {Fewster, Mark and Graham, Dorothy},
	year = {1999},
	file = {Software Test Automation.pdf:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\2NPA5325\\Software Test Automation.pdf:application/pdf}
}

@inproceedings{meszaros_agile_2003,
	address = {New York, NY, USA},
	series = {{OOPSLA} '03},
	title = {Agile {Regression} {Testing} {Using} {Record} \& {Playback}},
	isbn = {1-58113-751-6},
	url = {http://doi.acm.org/10.1145/949344.949442},
	doi = {10.1145/949344.949442},
	abstract = {There are times when it is not practical to hand-script automated tests for an existing system before one starts to modify it (whether to refactor it to permit automated testing or to add new functionality). In these circumstances, the use of "record \& playback" testing may be a viable alternative to handwriting all the tests.This paper describes experiences using this approach and summarizes key learnings applicable to other projects.},
	urldate = {2014-11-17},
	booktitle = {Companion of the 18th {Annual} {ACM} {SIGPLAN} {Conference} on {Object}-oriented {Programming}, {Systems}, {Languages}, and {Applications}},
	publisher = {ACM},
	author = {Meszaros, Gerard},
	year = {2003},
	keywords = {acceptance test, Automated Testing, best practices, functional test, JUnit, patterns, playback, record, robot user, user interface, XML},
	pages = {353--360},
	annote = {würfel},
	file = {ACM Full Text PDF:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\9828HVRW\\Meszaros - 2003 - Agile Regression Testing Using Record & Playback.pdf:application/pdf;Agile Regression Testing Meszaros.pdf:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\ZW3CXBIS\\p353-meszaros.pdf:application/pdf}
}

@inproceedings{memon_automated_2000,
	address = {New York, NY, USA},
	series = {{SIGSOFT} '00/{FSE}-8},
	title = {Automated {Test} {Oracles} for {GUIs}},
	isbn = {1-58113-205-0},
	url = {http://doi.acm.org/10.1145/355045.355050},
	doi = {10.1145/355045.355050},
	abstract = {Graphical User Interfaces (GUIs) are critical components of today's software. Because GUIs have different characteristics than traditional software, conventional testing techniques do not apply to GUI software. In previous work, we presented an approach to generate GUI test cases, which take the form of sequences of actions. In this paper we develop a test oracle technique to determine if a GUI behaves as expected for a given test case. Our oracle uses a formal model of a GUI, expressed as sets of objects, object properties, and actions. Given the formal model and a test case, our oracle automatically derives the expected state for every action in the test case. We represent the actual state of an executing GUI in terms of objects and their properties derived from the GUI's execution. Using the actual state acquired from an execution monitor, our oracle automatically compares the expected and actual states after each action to verify the correctness of the GUI for the test case. We implemented the oracle as a component in our GUI testing system, called Planning Assisted Tester for grapHical user interface Systems (PATHS), which is based on AI planning. We experimentally evaluated the practicality and effectiveness of our oracle technique and report on the results of experiments to test and verify the behavior of our version of the Microsoft WordPad's GUI.},
	urldate = {2014-11-17},
	booktitle = {Proceedings of the 8th {ACM} {SIGSOFT} {International} {Symposium} on {Foundations} of {Software} {Engineering}: {Twenty}-first {Century} {Applications}},
	publisher = {ACM},
	author = {Memon, Atif M. and Pollack, Martha E. and Soffa, Mary Lou},
	year = {2000},
	keywords = {automated oracles, GUI testing, GUI test oracles},
	pages = {30--39},
	file = {Test Oracles for GUIs.pdf:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\J6S4F2C2\\FSE2000.pdf:application/pdf}
}

@inproceedings{shahamiri_comparative_2009,
	title = {A {Comparative} {Study} on {Automated} {Software} {Test} {Oracle} {Methods}},
	doi = {10.1109/ICSEA.2009.29},
	abstract = {Software testing has been used to find software faults in order to improve its quality. To verify the software behavior, testers require test oracle. Test oracle is a reliable source of expected software behavior that provides outputs for any input specified in the software specifications and a comparator to verify actual results. While test automation requires automated oracle support, oracle automation is considered as a challenging task. These challenges are from the automation required in expected output generation and results verification. This paper presents oracle activities and the challenges to prepare automated oracle. Then a comparative study of existing automated oracle and expected output generation methods is provided. Finally, a classification of these methods is suggested based on how these methods provide automated test oracle and the tool they used. The classification explains which oracle activities will be automated by the proposed approaches.},
	booktitle = {Fourth {International} {Conference} on {Software} {Engineering} {Advances}, 2009. {ICSEA} '09},
	author = {Shahamiri, S.R. and Kadir, W.M.N.W. and Mohd-Hashim, S.Z.},
	month = sep,
	year = {2009},
	keywords = {automated software testing, automated software test oracle methods, Automated Test Oracle, Automatic testing, Collaborative software, Costs, Databases, Expected Output Generation, expected output generation methods, oracle activities, oracle automation, Programming, program testing, Scheduling, software behavior verifiaction, software engineering, software faults, software specifications, Software testing, Sorting, Taxonomy, Uncertainty},
	pages = {140--145},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\3RRNK849\\abs_all.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\N2Q4TBQK\\Shahamiri et al. - 2009 - A Comparative Study on Automated Software Test Ora.pdf:application/pdf}
}

@inproceedings{richardson_specification-based_1992,
	title = {Specification-based test oracles for reactive systems},
	doi = {10.1109/ICSE.1992.753494},
	abstract = {The testing process is typically systematic in test data se- lection and test execution. For the most part, however, the effective use of test oracles has been neglected, even though they are a critical component of the testing process. Test or- acles prescribe acceptable behavior for test execution. In the absence of judging test results with formal oracles, testing does not achieve its goal of revealing failures or assuring cor- rect behavior in a practical manner; manual result checking is neither reliable nor cost-effective. We argue that test oracles should be derived from specifications in conjunction with testing criteria, represented in a common form, and their use made integral to the test- ing process. For complex, reactive systems, oracles must reflect the multiparadigm nature of the required behavior. Such systems are often specified using multiple languages, each selected for its utility specifying in a particular computational paradigm. Thus, we are developing an approach for deriving and using oracles based on multiparadigm and multilingual specifications to enable the verification of test results for reactive systems as well as less complex systems.},
	booktitle = {International {Conference} on {Software} {Engineering}, 1992},
	author = {Richardson, D.J. and Aha, S.L. and O'Malley, T.O.},
	year = {1992},
	keywords = {Aerospace materials, Aircraft manufacture, Computer science, Distributed computing, Government, Machinery, Materials testing, Software systems, System testing},
	pages = {105--118},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\P6C7AC4E\\login.html:text/html;Specification-based Oracles.pdf:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\WP2DQMDI\\00753494.pdf:application/pdf}
}

@inproceedings{bouquet_test_2008,
	address = {New York, NY, USA},
	series = {{AST} '08},
	title = {A {Test} {Generation} {Solution} to {Automate} {Software} {Testing}},
	isbn = {978-1-60558-030-2},
	url = {http://doi.acm.org/10.1145/1370042.1370052},
	doi = {10.1145/1370042.1370052},
	abstract = {This paper describes the LEIRIOS Smart Testing™ approach to the functional validation of a subpart of the StarUML case study. This model-based testing process for test automation is shown from start to end: from functional requirements to the publication of generated tests in a test repository and automatic execution of scripts with a test execution robot. This is a short position paper illustrating how LEIRIOS Smart Testing" can help to answer to the question: how to automate the testing of UML/MDA platform StarUML.},
	urldate = {2014-11-17},
	booktitle = {Proceedings of the 3rd {International} {Workshop} on {Automation} of {Software} {Test}},
	publisher = {ACM},
	author = {Bouquet, Fabrice and Grandpierre, Christophe and Legeard, Bruno and Peureux, Fabien},
	year = {2008},
	keywords = {model-based testing, OCL, Software testing, UML},
	pages = {45--48},
	file = {ACM Full Text PDF:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\XP5ZV8SC\\Bouquet et al. - 2008 - A Test Generation Solution to Automate Software Te.pdf:application/pdf}
}

@book{iso/iec_iso/iec_2001,
	edition = {2001},
	title = {{ISO}/{IEC} 9126. {Software} engineering -- {Product} quality},
	publisher = {ISO/IEC},
	author = {ISO/IEC},
	year = {2001},
	file = {ISO/IEC 9126. Software engineering -- Product quality (bibtex):C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\S6SU3ZA5\\bibtexbrowser.html:text/html}
}

@misc{prof._dr._r._lindermeier_projekt-_2006,
	title = {Projekt- und {Qualitätsmanagement} {Softwarequalität} und {Softwareprüfung}},
	author = {{Prof. Dr. R. Lindermeier}},
	year = {2006}
}

@book{hoffmann_software-qualitat_2013,
	address = {Berlin},
	edition = {2013},
	title = {Software-{Qualität}},
	isbn = {978-3-540-76322-2},
	abstract = {Computerabstürze, Rückrufaktionen, Sicherheitslecks: Software-Fehler sind fast schon ein alltägliches Problem. Qualitätssicherung wird damit zu einer immer wichtigeren Aufgabe. Das Buch führt umfassend und praxisnah in die Software-Qualitätssicherung ein. Zunächst werden typische Fehlerquellen der Programmentwicklung erörtert, um anschließend Methoden und Techniken zur Qualitätssteigerung vorzustellen. Der Band behandelt die zentralen Fragen der konstruktiven und analytischen Qualitätssicherung, der Software-Infrastruktur und der Managementprozesse.},
	language = {Deutsch},
	publisher = {Springer},
	author = {Hoffmann, Dirk W.},
	year = {2013}
}

@article{ieee_ieee_1991,
	title = {{IEEE} {Standard} {Computer} {Dictionary}: {A} {Compilation} of {IEEE} {Standard} {Computer} {Glossaries}},
	shorttitle = {{IEEE} {Standard} {Computer} {Dictionary}},
	doi = {10.1109/IEEESTD.1991.106963},
	abstract = {Identifies terms currently in use in the computer field. Standard definitions for thoseterms are established. Compilation of IEEE Stds IEEE Std 1084, IEEE Std 610.2, IEEE Std 610.3, IEEE Std 610.4, IEEE Std 610.5 and IEEE Std 610.12},
	journal = {IEEE Std 610},
	author = {{IEEE}},
	month = jan,
	year = {1991},
	keywords = {610, applications, computer, computer field, definitions, dictionary, glossaries, glossary, terminology},
	pages = {1--217}
}

@inproceedings{royce_managing_1987,
	address = {Los Alamitos, CA, USA},
	series = {{ICSE} '87},
	title = {Managing the {Development} of {Large} {Software} {Systems}: {Concepts} and {Techniques}},
	isbn = {978-0-89791-216-7},
	shorttitle = {Managing the {Development} of {Large} {Software} {Systems}},
	url = {http://dl.acm.org/citation.cfm?id=41765.41801},
	urldate = {2015-07-13},
	booktitle = {Proceedings of the 9th {International} {Conference} on {Software} {Engineering}},
	publisher = {IEEE Computer Society Press},
	author = {Royce, W. W.},
	year = {1987},
	pages = {328--338},
	file = {p328-royce.pdf:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\6TB73GSI\\p328-royce.pdf:application/pdf}
}

@book{schwaber_agile_2002,
	address = {Upper Saddle River, NJ},
	edition = {Pearson Internat. Ed.},
	series = {Series in agile software development},
	title = {Agile software development with {Scrum}},
	isbn = {978-0-13-207489-6},
	publisher = {Pearson Education International},
	author = {Schwaber, Ken},
	year = {2002},
	file = {OPAC der Hochschule München:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\WVSFDI9U\\search.html:text/html}
}

@book{dustin_software_2001,
	address = {Berlin [u.a.]},
	series = {Xpert.press},
	title = {Software automatisch testen},
	isbn = {978-3-540-67639-3},
	publisher = {Springer},
	author = {Dustin, Elfriede},
	year = {2001},
	file = {OPAC der Hochschule München:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\JSM5T78T\\search.html:text/html}
}

@book{dustin_automated_1999,
	title = {Automated {Software} {Testing}: {Introduction}, {Management}, and {Performance}},
	isbn = {978-0-672-33384-2},
	shorttitle = {Automated {Software} {Testing}},
	abstract = {With the urgent demand for rapid turnaround on new software releases--without compromising quality--the testing element of software development must keep pace, requiring a major shift from slow, labor-intensive testing methods to a faster and more thorough automated testing approach.   Automated Software Testing is a comprehensive, step-by-step guide to the most effective tools, techniques, and methods for automated testing. Using numerous case studies of successful industry implementations, this book presents everything you need to know to successfully incorporate automated testing into the development process.   In particular, this book focuses on the Automated Test Life Cycle Methodology (ATLM), a structured process for designing and executing testing that parallels the Rapid Application Development methodology commonly used today. Automated Software Testing is designed to lead you through each step of this structured program, from the initial decision to implement automated software testing through test planning, execution, and reporting. Included are test automation and test management guidance for:   Acquiring management support Test tool evaluation and selection The automated testing introduction process Test effort and test team sizing Test team composition, recruiting, and management Test planning and preparation Test procedure development guidelines Automation reuse analysis and reuse library Best practices for test automation},
	language = {en},
	publisher = {Addison-Wesley Professional},
	author = {Dustin, Elfriede and Rashka, Jeff and Paul, John},
	month = jun,
	year = {1999},
	keywords = {Computers / Software Development \& Engineering / General, Computers / Software Development \& Engineering / Quality Assurance \& Testing}
}

@misc{r._m._hierons_specification_????,
	title = {Specification {Based} {Testing} and {Model} {Based} {Testing}},
	url = {http://www.brunel.ac.uk/~csstrmh/research/specification_based_testing.html},
	urldate = {2015-08-02},
	author = {{R. M. Hierons}},
	file = {Specification Based Testing and Model Based Testing:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\PIWNETKE\\specification_based_testing.html:text/html}
}

@book{rossner_basiswissen_2010,
	address = {Heidelberg},
	edition = {1. Aufl.},
	title = {Basiswissen modellbasierter {Test}},
	isbn = {978-3-89864-589-8},
	publisher = {dpunkt-Verl.},
	author = {Rossner, Thomas},
	year = {2010},
	file = {OPAC der Hochschule München:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\5984PK46\\search.html:text/html}
}

@misc{selenium_selenium_2015,
	title = {Selenium - {Web} {Browser} {Automation}},
	url = {http://www.seleniumhq.org/},
	urldate = {2015-08-11},
	author = {{Selenium}},
	month = aug,
	year = {2015},
	file = {Selenium - Web Browser Automation:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\JRAA4G9N\\www.seleniumhq.org.html:text/html}
}

@misc{httpunit_httpunit_2015,
	title = {{HttpUnit} {Home}},
	url = {http://httpunit.sourceforge.net/},
	urldate = {2015-08-11},
	author = {{HttpUnit}},
	month = aug,
	year = {2015},
	file = {HttpUnit Home:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\PGN8K23D\\httpunit.sourceforge.net.html:text/html}
}

@misc{hp_testautomatisierung_2015,
	title = {Testautomatisierung, {Unified} {Functional} {Testing}, {UFT} {\textbar} {HP}® {Deutschland}},
	url = {http://www8.hp.com/de/de/software-solutions/unified-functional-automated-testing/},
	urldate = {2015-08-11},
	author = {{HP}},
	month = aug,
	year = {2015},
	file = {Testautomatisierung, Unified Functional Testing, UFT | HP® Deutschland:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\HVH5IM2Z\\unified-functional-automated-testing.html:text/html}
}

@misc{silk_test_borland_2015,
	title = {Borland {\textbar} {Silk} {Test}: {Automation} testing tool},
	url = {http://www.borland.com/Products/Software-Testing/Automated-Testing/Silk-Test},
	urldate = {2015-08-11},
	author = {{Silk Test}},
	month = aug,
	year = {2015},
	file = {Borland | Silk Test\: Automation testing tool:C\:\\Users\\Matthias\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\8mdn3ouj.default\\zotero\\storage\\Q7HE34QC\\Silk-Test.html:text/html}
}